name: Create Executable

on:
  push:
    branches: [main]
  schedule:
    - cron: "0 0 * * *"

jobs:
  create-executable:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install pip
        run: pip install requests
      - name: Check build
        id: check_build
        run: python build-check.py
      - name: Build executable
        if: ${{ steps.check_build.outputs.release_exists == '0' }}
        run: |
          pip install pyinstaller magic-wormhole==${{ steps.check_build.outputs.version }}
          pyinstaller .\launcher.py -F -c --distpath=. --clean --onefile --additional-hooks-dir=hooks --name=wormhole
          Compress-Archive -Path wormhole.exe -DestinationPath wormhole.zip
      - name: Upload artifact
        if: ${{ steps.check_build.outputs.release_exists == '0' }}
        uses: actions/upload-artifact@v2
        with:
          name: wormhole
          path: wormhole.exe
      - name: Create release
        if: ${{ steps.check_build.outputs.release_exists == '0' }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.check_build.outputs.version }}
          release_name: Release ${{ steps.check_build.outputs.version }}
          draft: false
          prerelease: false
      - name: Upload release asset
        if: ${{ steps.check_build.outputs.release_exists == '0' }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./wormhole.zip
          asset_name: wormhole.zip
          asset_content_type: application/zip
